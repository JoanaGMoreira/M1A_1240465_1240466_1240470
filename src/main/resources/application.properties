spring.application.name=psoft-g1
server.port=8089

# active profiles config
#
# application use four active profiles
#
# first to select the bootstrap
# ------------------------------------------------
# When using HSQL, use: bootstrap
# ------------------------------------------------
#
# second to select the database
# ------------------------------------------------
# When using HSQL, use: bootstrap
# When using MySQL, use: mysql
# When using MongoDB, use: mongodb
# When using Redis, use: redis
# ------------------------------------------------
#
# third to select the IAM Provider
# ------------------------------------------------
# When using Facebook, use: facebook
# When using Google, use: google
# When using Azure, use: azure
# ------------------------------------------------
#
# Fourth to select the ID´s Generation Algorithm
# ------------------------------------------------
# When using ALG11, use: alg11
# When using ALG12, use: alg12
# When using ALG13, use: alg13
# ------------------------------------------------
#
# Fifth to select the Lending Recommendation Algorithm
# ------------------------------------------------
# When using ALG21, use: alg21
# When using ALG22, use: alg22
# When using ALG23, use: alg33
# ------------------------------------------------
#bootstrap=bootstrap
#database=mysql
#iam=google
#idsgeneration=alg11
#lendingsalg=alg22
#
#spring.profiles.active=${bootstrap},${database},${iam},${idsgeneration},${lendingsalg}
spring.profiles.active=h2,bootstrap

##
## OpenAPI
##
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

##
## JWT
##
jwt.private.key=classpath:rsa.private.key
jwt.public.key=classpath:rsa.public.key

##
## datasource
##

## show SQL
#hibernate.show_sql=false
#spring.jpa.hibernate.format_sql=true
#Ricardo: what is this for?

## database schema generation
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

##
## H2 console for development purposes.
## e.g., http://localhost:8080/h2-console
##
## for security reasons this setting should be false
#spring.h2.console.enabled=true

##
## MULTIPART (MultipartProperties)
##
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

##
## File Storage Properties
##
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=uploads-psoft-g1
#Maximum photo size -> in bytes | by the rules of the forum it's 20KB
file.photo_max_size=20000

## Api Ninjas key
my.ninjas-key=a5nSlaa4JxIubY09H+NYuQ==cY9FegnFmAvYi6fN
logging.level.root=INFO

# Enable Hibernate SQL logging
spring.jpa.show-sql=true

# Log the values of parameters
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace